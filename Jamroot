#
# Copyright (C) 2013 Mateusz Loskot <mateusz@loskot.net>
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy 
# at http://www.boost.org/LICENSE_1_0.txt)
#
import notfile
import os ;

# Configure dependencies 

local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
if $(BOOST_ROOT)
{
   use-project /boost : $(BOOST_ROOT) ;
}

local JSON_SPIRIT_ROOT = [ os.environ JSON_SPIRIT_ROOT ] ;
if $(JSON_SPIRIT_ROOT)
{
   use-project /json_spirit : $(JSON_SPIRIT_ROOT) ;
}

local RAPIDJSON_ROOT = [ os.environ RAPIDJSON_ROOT ] ;

local QT_ROOT = [ os.environ QTDIR ] ;
if $(QT_ROOT)
{
   using qt5 : $(QT_ROOT) ;
}

# Declare targets for dependencies
lib jsoncpplib : : <name>jsoncpp : : <include>/usr/include/jsoncpp ;


# Declare project 
project json_benchmark
    :
    requirements
        <include>.
        <toolset>clang:<cxxflags>-std=c++11
        <toolset>gcc:<cxxflags>-std=c++0x
        <toolset>gcc:<threading>multi
        <toolset>gcc:<cxxflags>-ftemplate-depth=300
        <toolset>msvc:<cxxflags>/wd4996
        <use>/boost//headers
    ;

# Declare executable targets of benchmarking programs
rule bexe ( sources + : requirements * : target-name ? : default-build * )
{
    target-name ?= $(sources[1]:D=:S=) ;
    exe $(target-name) : $(sources) : $(requirements) : $(default-build) ;
}

bexe benchmark_spirit.cpp /json_spirit//json ;
bexe benchmark_rapidjson.cpp : <include>$(RAPIDJSON_ROOT)/include ; 
bexe benchmark_jsoncpp.cpp jsoncpplib ;

if $(QT_ROOT)
{
    exe benchmark_qjsondoc : benchmark_qjsondoc.cpp /qt5//QtCore ;
}

# TODO: find out how to run all programs after build
#actions run-benchmark { $(>[1]) ; }
#notfile benchmark_rapidjson-run : @run-benchmark : benchmark_rapidjson ;

